// Code generated by sqlc. DO NOT EDIT.
// source: product.sql

package querier

import (
	"context"
)

const findProduct = `-- name: FindProduct :one
SELECT name, price, created_at, updated_at, deleted_at FROM product
WHERE name = $1
`

func (q *Queries) FindProduct(ctx context.Context, name string) (Product, error) {
	row := q.db.QueryRowContext(ctx, findProduct, name)
	var i Product
	err := row.Scan(
		&i.Name,
		&i.Price,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}

const insertProduct = `-- name: InsertProduct :one
INSERT INTO product (
  name,
  price,
  created_at,
  updated_at
) VALUES (
  $1, 
  $2,
  NOW(),
  NOW()
)
RETURNING name, price, created_at, updated_at, deleted_at
`

type InsertProductParams struct {
	Name  string
	Price int64
}

func (q *Queries) InsertProduct(ctx context.Context, arg InsertProductParams) (Product, error) {
	row := q.db.QueryRowContext(ctx, insertProduct, arg.Name, arg.Price)
	var i Product
	err := row.Scan(
		&i.Name,
		&i.Price,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
